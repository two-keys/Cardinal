# Put this in the file: .github/workflows/verify.yml

name: Verify
on: 
  push:
  pull_request:
    types: [opened]

jobs:
  skip_check_job:
    continue-on-error: true
    name: Skip Check
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
  linters:
    needs: skip_check_job
    if: needs.skip_check_job.outputs.should_skip != 'true'
    name: Linters
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          cache-version: 2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 23.6.1
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Build Javascript
        run: |
          yarn build
      - name: Run linters
        if: always()
        run: |
          bundle exec rubocop --parallel --require rubocop-rails
      - name: Run security checks
        if: always()
        run: |
          bundle exec bundler-audit --update
          bundle exec brakeman -q -w2

  tests:
    needs: skip_check_job
    if: needs.skip_check_job.outputs.should_skip != 'true'
    name: Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: Cardinal
          POSTGRES_DB: Cardinal_test
          POSTGRES_PASSWORD: cardinal
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: wodby/redis:6-3.10.0
        ports:
          - 6379:6379
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: ./.github/actions/test-setup
      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgresql://Cardinal:cardinal@localhost/Cardinal_test
        run: |
          bin/rails test -v

# system_tests:
#    name: System Tests
#    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:14
#        env:
#          POSTGRES_USER: Cardinal
#          POSTGRES_DB: Cardinal_test
#          POSTGRES_PASSWORD: cardinal
#        ports:
#          - 5432:5432
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
#      redis:
#        image: wodby/redis:6-3.10.0
#        ports:
#          - 6379:6379
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#      - uses: ./.github/actions/test-setup
#      - name: Install chrome headless
#        run: |
#          sudo apt-get update
#          sudo apt-get install google-chrome-stable
#
#      - name: Run System tests
#        env:
#          RAILS_ENV: test
#          DATABASE_URL: postgresql://Cardinal:cardinal@localhost/Cardinal_test
#        run: |
#          bin/rails test:system -v
#      - name: Archive System tests output
#        if: ${{ failure() }}
#        uses: actions/upload-artifact@v3
#        with:
#          name: capybara-screenshots
#          path: tmp/screenshots